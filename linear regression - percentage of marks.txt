import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Sample data (you can replace this with your own dataset)
data = {'Hours': [2.5, 5.1, 3.2, 8.5, 3.5, 1.5, 9.2, 5.5, 8.3, 2.7,7.7,5.9,4.5,3.3,1.1,8.9,2.5,1.9,6.1,7.4,2.7,4.8,3.8,6.9,7.8],
        'Scores': [21, 47, 27, 75, 30, 20, 88, 60, 81, 25,85,62,41,42,17,95,30,24,67,69,30,54,35,76,86]}

# Create a DataFrame
df = pd.DataFrame(data)

# Split the data into features (X) and target variable (y)
X = df[['Hours']]
y = df['Scores']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Predict the percentage based on a given number of study hours
hours_to_predict = 9.25
predicted_percentage = model.predict([[hours_to_predict]])

# Print the predicted percentage
print(f'Predicted Percentage for {hours_to_predict} hours: {predicted_percentage[0]}')

# Visualize the results
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, y_pred, color='red', linewidth=3)
plt.title('Linear Regression - Hours vs Percentage')
plt.xlabel('Hours of Study')
plt.ylabel('Percentage')
plt.show()
